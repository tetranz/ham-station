<?php

/**
 * @file
 * Contains ham_station.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\views\ViewExecutable;
use \Drupal\ham_station\Entity\HamLocation;

/**
 * Implements hook_help().
 */
function ham_station_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the ham_station module.
    case 'help.page.ham_station':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Information about amateur radio stations') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_theme().
 */
function ham_station_theme($existing, $type, $theme, $path) {
  return [
    'ham_neighbors_report' => [
      'variables' => [
        'state_counts' => NULL,
        'totals' => NULL,
        'success_pc' => NULL,
      ],
    ],
    'ham_neighbors' => [
      'variables' => [
        'form' => NULL,
        'info_blocks' => NULL,
      ],
    ],
  ];
}

/**
 * Implements hook_library_info_alter().
 */
function ham_station_library_info_alter(&$libraries, $extension) {
  if ($extension !== 'ham_station') {
    return;
  }

  $js_libs = &$libraries['neighbors']['js'];
  $maps_lib_key = NULL;
  $maps_lib = NULL;

  foreach ($js_libs as $key => $lib) {
    if (strpos($key, 'maps.googleapis.com') == FALSE) {
      continue;
    }

    $maps_lib_key = $key;
    $maps_lib = $lib;
    break;
  }

  $api_key = \Drupal::configFactory()
    ->get('ham_station.settings')
    ->get('google_maps_api_key');

  unset($js_libs[$maps_lib_key]);

  // Add our Google API key.
  $maps_lib_key = str_replace('YOUR_API_KEY', $api_key, $maps_lib_key);
  $js_libs[$maps_lib_key] = $maps_lib;
}

function ham_station_location_label_callback(HamLocation $location) {
  return sprintf('%s,%s', $location->get('latitude')->value, $location->get('longitude')->value);
}
